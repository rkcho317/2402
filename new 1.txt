Program name: "Quadratic Computation and Validation".  This program demonstrates how to turn
an input of a string in to three floats then use those floats to calculate a
quadratic equation. Once we get the roots from that equation, we determine how
many valid ones are there.


;debugging
mov rax, 1
mov rdi, output_root
movsd xmm0, xmm5
call printf

input_coeff db "Please enter the three floating point coefficients of a quadratic equation.", 10, 0


input_c db "%s%s%s", 0

string1 db "%s%s%s",0

;Display User Input Message
;mov rax,0
;mov rdi, input_coeff
;call printf

;Accept input of three numbers for the quadratic formula
;mov rax, 0
;mov rdi, stringform
;mov rsi, rsp
;call scanf

add rsp, 256

;Implement isfloat.cpp
;mov rdi, rsp
;call isfloat
;mov r13, rax
;cmp r13, 0
;je invalidRoot


;input 3
;mov rdi, input_c
;mov rsi, rsp
;mov rdx, rsp
;add rdx, 8
;mov rcx, rsp
;add rcx, 16
;call scanf

;convert to float
;mov rax, 0
;mov rdi, rsp
;call atof
;movsd xmm5, xmm0
;mov rdi,rsp
;add rdi, 8
;call atof
;movsd xmm6, xmm0
;mov rdi, rsp
;add rdi,16
;movsd xmm7, xmm0



;Prompt for the first coefficient input
mov qword rdi, input1
mov qword rax, 0
call printf

;Input the first coefficient
mov qword rdi, string1
push qword -1
mov qword rsi, rsp
mov qword rax, 0
call scanf
pop qword r12

;Implement isfloat.cpp
mov rdi, rsp
call isfloat
mov r12, rax
cmp r12, 0
je invalidRoot

valid1:
;Convert to float
mov rax, 0
mov rdi, rsp
call atof
movsd xmm15, xmm0
mov r12, 0
cvtsi2sd xmm5, r12
ucomisd xmm5, xmm15
je invalidRoot

jmp end


;Prompt for the second coefficient input
mov qword rdi, input2
mov qword rax, 0
call printf

;Input the Second coefficient
mov qword rdi, string2
push qword 999
mov qword rsi, rsp
mov qword rax, 0
call scanf
pop qword r13

;Implement isfloat.cpp
;mov rdi, rsp
;call isfloat
;mov r13, rax
;cmp r13, 0
;je invalidRoot

;Convert to float
;mov rax, 0
;mov rdi, rsp
;call atof
;movsd xmm6, [rsp]


;Prompt for the third coefficient input
;mov qword rdi, input3
;mov qword rax, 0
;call printf

;Input the third coefficient
;mov qword rdi, string3
;push qword 999
;mov qword rsi, rsp
;mov qword rax, 0
;call scanf
;pop qword r15

invalidRoot:
mov rax, 0
mov rsi, error_message
call printf
pop rax

end:
add rsp, 512

;Most recent version of inputting the 3 DAMN THINGS!

;Display User Input Message
mov rax,0
mov rdi, input_coeff
call printf

;Inputting User inputs
push qword -1
push qword -2
push qword -3
mov rax, 0
mov rdi, string1
mov rsi, rsp
mov rdx, rsp
add rdx, 8
mov rcx, rsp
add rcx, 16
call scanf

mov r10, [rsp]
mov r11, [rsp+8]
mov r12, [rsp+16]

pop rax
pop rax
pop rax


;coefficient a/r10
;Implement isfloat.cpp
mov rdi, rsp
mov r10, rsp
call isfloat
cmp r10, 0
je invalidRoot

;Convert to float
mov rax, 0
mov rdi, rsp
mov r10, rsp
call atof
movsd xmm15, xmm0
ucomisd xmm5, xmm15
jmp see


;coefficient b/r11
;Implement isfloat.cpp
mov rdi, rsp
mov r11, rsp
call isfloat
mov r14, rax
cmp r14,0
je invalidRoot


;Convert to float
mov rax,0
mov rdi, rsp
mov r14, rsp
call atof
movsd xmm15,xmm0
ucomisd xmm6, xmm15
jmp see

;coefficient c/r12
;Implement isfloat.cpp
mov rdi, rsp
mov r12, rsp
call isfloat
mov r15, rax
cmp r15,0
je invalidRoot

;Convert to float
mov rax,0
mov rdi, rsp
mov r15, rsp
call atof
movsd xmm15,xmm0
ucomisd xmm7, xmm15
jmp see

invalidRoot:
mov rax, 0
mov rsi, error_message
call printf


;Display how many roots by calling quad_library
push qword 99
mov rax, 1
movsd xmm0, xmm14
ucomisd xmm0, xmm1
je noroot
jg rootz

rootz:
mov rax,0
movsd xmm1, xmm15
ucomisd xmm0, xmm1
je oneroot
ja tworoot

;Call show_one_root
mov rax,1
mov rdi, rsp
call show_one_root
movsd xmm0, xmm14
jmp end

;Call show_two_root
mov rax,0
mov rdi, rsp
call show_two_root
movsd xmm0, xmm14
movsd xmm1, xmm15
jmp end

see:
add rsp, 512
