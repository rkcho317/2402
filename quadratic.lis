     1                                  ;****************************************************************************************************************************
     2                                  ;Program name: "Quadratic".  This program demonstrates the 
     3                                  ;
     4                                  ; Copyright (C) 2021 Rosa Cho.                                                                           *
     5                                  ;                                                                                                                           *
     6                                  ;This file is part of the software program "Quadratics".                                                                   *
     7                                  ;Quadratics is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License   *
     8                                  ;version 3 as published by the Free Software Foundation.                                                                    *
     9                                  ;Quadratics is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied          *
    10                                  ;warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.     *
    11                                  ;A copy of the GNU General Public License v3 is available here:  <https:;www.gnu.org/licenses/>.                            *
    12                                  ;****************************************************************************************************************************
    13                                  
    14                                  ;Author information
    15                                  ;  Author name: Rosa Cho
    16                                  ;  Author email: rkcho317@csu.fullerton.edu
    17                                  ;
    18                                  ;Program information
    19                                  ;  Program name: Quadratics
    20                                  ;  Programming languages: Four modules in C and one module in X86
    21                                  ;  Date program began: 2021-Feb-18
    22                                  ;  Date of last update: 2021-Feb-20
    23                                  ;  Files in this program: second_degree.cpp, quad_library.cpp, isfloat.cpp, isdigit.cpp, quadratic.asm
    24                                  ;  Status: In-progress
    25                                  ;
    26                                  ;This file
    27                                  ;   File name: quadratic.asm
    28                                  ;   Language: X86 with Intel syntax.
    29                                  ;   Max page width: 
    30                                  ;   Assemble: nasm -f elf64 -l quadratic.lis -o quadratic.o quadratic.asm
    31                                  
    32                                  
    33                                  extern printf
    34                                  
    35                                  extern scanf
    36                                  
    37                                  extern  isfloat
    38                                  
    39                                  extern second_degree
    40                                  
    41                                  extern  quad_library
    42                                  
    43                                  global quads
    44                                  
    45                                  segment .data
    46                                  
    47 00000000 546869732070726F67-     outputpurpose db "This program will find the roots of the quadratic equation ", 10, 0
    48 00000009 72616D2077696C6C20-
    49 00000012 66696E642074686520-
    50 0000001B 726F6F7473206F6620-
    51 00000024 746865207175616472-
    52 0000002D 617469632065717561-
    53 00000036 74696F6E200A00     
    54 0000003D 506C6561736520656E-     input_coeff db "Please enter the three floating point coefficients of a quadratic equation in the order a, b, c separated by white spaces. Then press enter: ", 10, 0
    55 00000046 746572207468652074-
    56 0000004F 6872656520666C6F61-
    57 00000058 74696E6720706F696E-
    58 00000061 7420636F6566666963-
    59 0000006A 69656E7473206F6620-
    60 00000073 612071756164726174-
    61 0000007C 696320657175617469-
    62 00000085 6F6E20696E20746865-
    63 0000008E 206F7264657220612C-
    64 00000097 20622C206320736570-
    65 000000A0 617261746564206279-
    66 000000A9 207768697465207370-
    67 000000B2 616365732E20546865-
    68 000000BB 6E2070726573732065-
    69 000000C4 6E7465723A200A00   
    70 000000CC 5468616E6B20796F75-     output_equation db "Thank you. The equation is %5.3lf x^2 + %5.3lf x + %5.3lf = 0.0", 10, 0
    71 000000D5 2E2054686520657175-
    72 000000DE 6174696F6E20697320-
    73 000000E7 25352E336C6620785E-
    74 000000F0 32202B2025352E336C-
    75 000000F9 662078202B2025352E-
    76 00000102 336C66203D20302E30-
    77 0000010B 0A00               
    78 0000010D 4F6E65206F66207468-     output_returncaller db "One of these roots will be returned to the caller function.", 10, 0
    79 00000116 65736520726F6F7473-
    80 0000011F 2077696C6C20626520-
    81 00000128 72657475726E656420-
    82 00000131 746F20746865206361-
    83 0000013A 6C6C65722066756E63-
    84 00000143 74696F6E2E0A00     
    85 0000014A 696E76616C69642072-     invalidRoot db "invalid root", 10,0
    86 00000153 6F6F740A00         
    87                                  
    88 00000158 256C66256C66256C66-     input_c db "%lf%lf%lf", 0
    89 00000161 00                 
    90                                  
    91                                  segment .bss
    92                                  
    93                                  segment .text
    94                                  
    95                                  quads:
    96                                  
    97 00000000 6A00                    push qword 0
    98                                  
    99                                  ;Display Welcome Message
   100 00000002 B800000000              mov rax,0
   101 00000007 48BF-                   mov rdi, outputpurpose
   102 00000009 [0000000000000000] 
   103 00000011 E8(00000000)            call printf
   104 00000016 58                      pop rax
   105                                  
   106                                  ;Display User Input Message 
   107 00000017 B800000000              mov rax,0
   108 0000001C 48BF-                   mov rdi, input_coeff
   109 0000001E [3D00000000000000] 
   110 00000026 E8(00000000)            call printf
   111 0000002B 58                      pop rax
   112                                  
   113                                  ;Accept input of three numbers for the quadratic formula
   114 0000002C 6AFF                    push qword -1
   115 0000002E 6AFE                    push qword -2
   116 00000030 6AFD                    push qword -3
   117 00000032 B800000000              mov rax, 0
   118 00000037 48BF-                   mov rdi, input_c  
   119 00000039 [5801000000000000] 
   120 00000041 4889E6                  mov rsi, rsp                   
   121 00000044 4889E2                  mov rdx, rsp
   122 00000047 4883C208                add rdx, 8                     
   123 0000004B 4889E1                  mov rcx, rsp
   124 0000004E 4883C110                add rcx, 16                   
   125 00000052 E8(00000000)            call scanf
   126 00000057 F20F102C24              movsd xmm5, [rsp]
   127 0000005C F20F10742408            movsd xmm6, [rsp+8]
   128 00000062 F20F107C2410            movsd xmm7, [rsp+16]
   129 00000068 58                      pop rax                        
   130 00000069 58                      pop rax                        
   131 0000006A 58                      pop rax   
   132                                  
   133                                  ;Implement isfloat.cpp
   134 0000006B 4889E7                  mov rdi, rsp
   135 0000006E B800000000              mov rax, 0
   136 00000073 E8(00000000)            call isfloat
   137 00000078 4883F800                cmp rax, 0
   138 0000007C 0F84(4A010000)          je invalidRoot
   139                                  
   140                                  ;mov rdi, rsp
   141                                  ;mov rax, 0
   142                                  ;call isfloat
   143                                  ;cmp rax, 0
   144                                  ;je invalidRoot
   145                                  
   146                                  ;mov rdi, rsp
   147                                  ;mov rax, 0
   148                                  ;call isfloat
   149                                  ;cmp rax, 0
   150                                  ;je invalid
   151                                  
   152                                  ;Calculate the quadratic formula
   153                                  
   154                                  ;a * c 
   155 00000082 F2440F10C5              movsd xmm8, xmm5
   156 00000087 F2440F59C7              mulsd xmm8, xmm7
   157                                  
   158                                  ;4*ac
   159 0000008C F30F5A1C2504000000      cvtss2sd xmm3, dword [4]
   160 00000095 F2440F59C3              mulsd xmm8, xmm3
   161                                  
   162                                  ;b^2
   163 0000009A F20F59F6                mulsd xmm6, xmm6
   164                                  
   165                                  ;b^2 - 4ac
   166 0000009E F2440F10CE              movsd xmm9, xmm6
   167 000000A3 F2450F5CC8              subsd xmm9, xmm8
   168                                  
   169                                  ;sqrtd(b^2-4ac)
   170 000000A8 F2450F51D1              sqrtsd xmm10, xmm9
   171                                  
   172                                  ;sqrtd(b^2-4ac) - b
   173 000000AD F2450F10DA              movsd xmm11, xmm10
   174 000000B2 F2440F5CDE              subsd xmm11, xmm6
   175                                  
   176                                  ;sqrtd(b^2-4ac) + b
   177 000000B7 F2450F10E2              movsd xmm12, xmm10
   178 000000BC F2440F58E6              addsd xmm12, xmm6
   179                                  
   180                                  ;2a
   181 000000C1 F30F5A242502000000      cvtss2sd xmm4, dword [2]
   182 000000CA F20F59EC                mulsd xmm5, xmm4
   183 000000CE F2440F10ED              movsd xmm13, xmm5
   184                                  
   185                                  ;root 1 = (sqrtd(b^2-4ac) - b) / 2a
   186 000000D3 F2450F5EDD              divsd xmm11, xmm13
   187 000000D8 F2450F10F3              movsd xmm14, xmm11
   188                                  
   189                                  ;root 2 = (sqrtd(b^2-4ac) + b) / 2a
   190 000000DD F2440F5EE5              divsd xmm12, xmm5
   191 000000E2 F2450F10FC              movsd xmm15, xmm12
   192                                  
   193                                  ;Display Exit Message 1 
   194 000000E7 B800000000              mov rax,0
   195 000000EC 48BF-                   mov rdi, output_equation
   196 000000EE [CC00000000000000] 
   197 000000F6 E8(00000000)            call printf
   198 000000FB 58                      pop rax
   199                                  
   200                                  ;Display Exit Message 2
   201                                  ;Display Exit Message
   202 000000FC B800000000              mov rax,0
   203 00000101 48BF-                   mov rdi, output_returncaller
   204 00000103 [0D01000000000000] 
   205 0000010B E8(00000000)            call printf
   206 00000110 58                      pop rax
   207                                  
   208 00000111 F2410F10C6              movsd xmm0, xmm14
   209 00000116 F2410F10CF              movsd xmm1, xmm15
